services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - type: bind
        source: ./nginx/templates
        target: /etc/nginx/templates
        read_only: false
      - type: bind
        source: ./nginx/logs
        target: /etc/nginx/logs
        read_only: false
      # for lets encrypt
      - type: bind
        source: ./html
        target: /var/www/html
        read_only: false
      # for lets encrypt
      - type: bind
        # 汚さないように意図的にローカル
        source: ./etc/letsencrypt/
        target: /etc/letsencrypt
        read_only: false
      # for lets encrypt
      - type: bind
        # 汚さないように意図的にローカル
        source: ./var/lib/letsencrypt
        target: /var/lib/letsencrypt
        read_only: false
    environment:
        # auth
      - NGINX_AUTH_DOMAIN=$AUTH_SERVICE_DOMAIN
      - NGINX_AUTH_PORT=$AUTH_SERVICE_PORT
        # op
      - NGINX_OPERATION_DOMAIN=$OPERATION_SERVICE_DOMAIN
      - NGINX_OPERATION_PORT=$OPERATION_SERVICE_PORT
        # supervisor
      - NGINX_SUPERVISOR_DOMAIN=$SUPERVISOR_SERVICE_DOMAIN
      - NGINX_SUPERVISOR_PORT=$SUPERVISOR_SERVICE_PORT
        # talk
      - NGINX_TALK_DOMAIN=$TALK_SERVICE_DOMAIN
      - NGINX_TALK_PORT=$TALK_SERVICE_PORT
        # user
      - NGINX_USER_DOMAIN=$USER_SERVICE_DOMAIN
      - NGINX_USER_PORT=$USER_SERVICE_PORT
    ports:
      - 443:443
    networks:
      - internal

  certbot:
    image: certbot/certbot:arm64v8-latest
    volumes:
      - ./html:/var/www/html
      - ./etc/letsencrypt/:/etc/letsencrypt/
      - ./var/lib/letsencrypt:/var/lib/letsencrypt
    command: ["--version"]

  auth:
    build:
      context: ./
      dockerfile: cmd/auth/Dockerfile
    environment:
      # (コンテナのみ)環境変数書き換えで.envのGOOGLE_APPLICATION_CREDENTIALSをコンテナに適したモノに上書き
      - GOOGLE_APPLICATION_CREDENTIALS=/application/gac.json
      # supervisorとの通信に必要, 同じnetworkで繋げるのでservicesの名前を指定する
      - SUPERVISOR_SERVICE_HOST=supervisor
    volumes:
      # (ローカル->コンテナ)ローカルのパスが指定されたGOOGLE_APPLICATION_CREDENTIALSを含む.envをコンテナにコピー
      - type: bind
        source: ./.env
        target: /application/.env
        read_only: true
      # (ローカル->コンテナ).envに記載されたローカルパスからgac.jsonをコンテナにバインド
      - type: bind
        source: $GOOGLE_APPLICATION_CREDENTIALS
        target: /application/gac.json
        read_only: true
#    ports:
#      - $AUTH_SERVICE_PORT:$AUTH_SERVICE_PORT
    networks:
      - internal

  operation:
    build:
      context: ./
      dockerfile: cmd/operation/Dockerfile
    environment:
      # (コンテナのみ)環境変数書き換えで.envのGOOGLE_APPLICATION_CREDENTIALSをコンテナに適したモノに上書き
      - GOOGLE_APPLICATION_CREDENTIALS=/application/gac.json
      # supervisorとの通信に必要, 同じnetworkで繋げるのでservicesの名前を指定する
      - SUPERVISOR_SERVICE_HOST=supervisor
    volumes:
      # (ローカル->コンテナ)ローカルのパスが指定されたGOOGLE_APPLICATION_CREDENTIALSを含む.envをコンテナにコピー
      - type: bind
        source: ./.env
        target: /application/.env
        read_only: true
      # (ローカル->コンテナ).envに記載されたローカルパスからgac.jsonをコンテナにバインド
      - type: bind
        source: $GOOGLE_APPLICATION_CREDENTIALS
        target: /application/gac.json
        read_only: true
    ports:
      - $OPERATION_SERVICE_PORT:$OPERATION_SERVICE_PORT
    networks:
      - internal

  supervisor:
    build:
      context: ./
      dockerfile: cmd/supervisor/Dockerfile
    environment:
      # (コンテナのみ)環境変数書き換えで.envのGOOGLE_APPLICATION_CREDENTIALSをコンテナに適したモノに上書き
      - GOOGLE_APPLICATION_CREDENTIALS=/application/gac.json
      # supervisorとの通信に必要, 同じnetworkで繋げるのでservicesの名前を指定する
    volumes:
      # (ローカル->コンテナ)ローカルのパスが指定されたGOOGLE_APPLICATION_CREDENTIALSを含む.envをコンテナにコピー
      - type: bind
        source: ./.env
        target: /application/.env
        read_only: true
      # (ローカル->コンテナ).envに記載されたローカルパスからgac.jsonをコンテナにバインド
      - type: bind
        source: $GOOGLE_APPLICATION_CREDENTIALS
        target: /application/gac.json
        read_only: true
#    ports:
#      - $SUPERVISOR_SERVICE_PORT:$SUPERVISOR_SERVICE_PORT
    networks:
      - internal

  talk:
    build:
      context: ./
      dockerfile: cmd/talk/Dockerfile
    environment:
      # (コンテナのみ)環境変数書き換えで.envのGOOGLE_APPLICATION_CREDENTIALSをコンテナに適したモノに上書き
      - GOOGLE_APPLICATION_CREDENTIALS=/application/gac.json
      # supervisorとの通信に必要, 同じnetworkで繋げるのでservicesの名前を指定する
      - SUPERVISOR_SERVICE_HOST=supervisor
    volumes:
      # (ローカル->コンテナ)ローカルのパスが指定されたGOOGLE_APPLICATION_CREDENTIALSを含む.envをコンテナにコピー
      - type: bind
        source: ./.env
        target: /application/.env
        read_only: true
      # (ローカル->コンテナ).envに記載されたローカルパスからgac.jsonをコンテナにバインド
      - type: bind
        source: $GOOGLE_APPLICATION_CREDENTIALS
        target: /application/gac.json
        read_only: true
#    ports:
#      - $TALK_SERVICE_PORT:$TALK_SERVICE_PORT
    networks:
      - internal

  user:
    build:
      context: ./
      dockerfile: cmd/user/Dockerfile
    environment:
      # (コンテナのみ)環境変数書き換えで.envのGOOGLE_APPLICATION_CREDENTIALSをコンテナに適したモノに上書き
      - GOOGLE_APPLICATION_CREDENTIALS=/application/gac.json
      # supervisorとの通信に必要, 同じnetworkで繋げるのでservicesの名前を指定する
      - SUPERVISOR_SERVICE_HOST=supervisor
    volumes:
      # (ローカル->コンテナ)ローカルのパスが指定されたGOOGLE_APPLICATION_CREDENTIALSを含む.envをコンテナにコピー
      - type: bind
        source: ./.env
        target: /application/.env
        read_only: true
      # (ローカル->コンテナ).envに記載されたローカルパスからgac.jsonをコンテナにバインド
      - type: bind
        source: $GOOGLE_APPLICATION_CREDENTIALS
        target: /application/gac.json
        read_only: true
#    ports:
#      - $USER_SERVICE_PORT:$USER_SERVICE_PORT
    networks:
      - internal

#volumes:
#  https-portal-data:

networks:
  internal: